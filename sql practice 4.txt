--practice 4

--Create a report that produces the following for each employee:
--<employee last name> earns <salary> monthly but wants <3 times 
--salary.>. Label the column Dream Salaries
select concat(last_name,' earns $')||concat(salary,' monthly but wants $')||salary*3 "Dream salaries" from employees;

--Display each employee’s last name, hire date, and salary review date, which is the first Monday 
--after six months of service. Label the column REVIEW. Format the dates to appear in the format 
--similar to “Monday, the Thirty-First of July, 2000.”
select last_name, hire_date, to_char((next_day(hire_date,'Monday')),'fmday," the "ddspth "of" month,yyyy') "Review" from employees;

-- Display the last name, hire date, and day of the week on which the employee started. Label the 
--column DAY. Order the results by the day of the week, starting with Monday
select last_name,hire_date,to_char(hire_date,'fmday') from employees order by to_char(hire_date-1,'d');

-- Create a query that displays the employees’ last names and commission amounts. If an employee 
--does not earn commission, show “No Commission.” Label the column COMM
select last_name,nvl(to_char(commission_pct),'No Commission') "COMM" from employees;

--Using the DECODE function, write a query that displays the grade of all employees based on the 
--value of the column JOB_ID, using the following data:
select job_id,
decode (job_id,'AD_PRES','A','ST_MAN','B','IT_PROG','C','SA_REP','D','ST_CLERK','E','0') GRADE
from employees;         
--Rewrite the statement in the preceding exercise using the CASE syntax
select job_id,
case job_id when 'IT_PROG' then 'A'
            when 'ST_MAN'  then 'B'
            when 'IT_PROG' then 'C'
            when 'SA_REP' then 'D'
      else '0' end "GRADE"
      from employees;      
      